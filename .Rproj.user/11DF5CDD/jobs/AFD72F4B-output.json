[1,"=> library(shiny); runApp('run.R')\n\n"]
[2,"Loading required package: ggplot2\r\n"]
[2,"\r\nAttaching package: 'plotly'\r\n\r\nThe following object is masked from 'package:ggplot2':\r\n\r\n    last_plot\r\n\r\nThe following object is masked from 'package:stats':\r\n\r\n    filter\r\n\r\nThe following object is masked from 'package:graphics':\r\n\r\n    layout\r\n\r\n\r\nAttaching package: 'shinyjs'\r\n\r\nThe following object is masked from 'package:shiny':\r\n\r\n    runExample\r\n\r\nThe following objects are masked from 'package:methods':\r\n\r\n    removeClass, show\r\n\r\n"]
[2,"\r\nAttaching package: 'bslib'\r\n\r\nThe following object is masked from 'package:utils':\r\n\r\n    page\r\n\r\n\r\nAttaching package: 'dplyr'\r\n\r\nThe following objects are masked from 'package:stats':\r\n\r\n    filter, lag\r\n\r\nThe following objects are masked from 'package:base':\r\n\r\n    intersect, setdiff, setequal, union\r\n\r\n"]
[2,"\r\nAttaching package: 'lubridate'\r\n\r\nThe following objects are masked from 'package:base':\r\n\r\n    date, intersect, setdiff, union\r\n\r\n\r\nAttaching package: 'shinyglide'\r\n\r\nThe following object is masked from 'package:graphics':\r\n\r\n    screen\r\n\r\n"]
[2,"dataPreparation 1.1.1\r\nType data_preparation_news() to see new features/changes/bug fixes.\r\n"]
[2,"\r\nAttaching package: 'shinyWidgets'\r\n\r\nThe following object is masked from 'package:shinyjs':\r\n\r\n    alert\r\n\r\nLoading required package: lattice\r\n"]
[2,"\r\nListening on http://127.0.0.1:6247\r\n"]
[1," [1] \"age\"            \"job\"            \"marital\"        \"education\"     \r\n [5] \"default\"        \"housing\"        \"loan\"           \"contact\"       \r\n [9] \"month\"          \"day_of_week\"    \"duration\"       \"campaign\"      \r\n[13] \"pdays\"          \"previous\"       \"poutcome\"       \"emp.var.rate\"  \r\n[17] \"cons.price.idx\" \"cons.conf.idx\"  \"euribor3m\"      \"nr.employed\"   \r\n[21] \"y\"             \r\n[1] \"un_factor: c(\\\"age\\\", \\\"job\\\", \\\"marital\\\", \\\"education\\\", \\\"default\\\", \\\"housing\\\", \\\"loan\\\", \\\"contact\\\", \\\"month\\\", \\\"day_of_week\\\", \\\"duration\\\", \\\"campaign\\\", \\\"pdays\\\", \\\"previous\\\", \\\"poutcome\\\", \\\"emp.var.rate\\\", \\\"cons.price.idx\\\", \\\"cons.conf.idx\\\", \\\"euribor3m\\\", \\\"nr.employed\\\", \\\"y\\\") aren't columns of types factor i do nothing for those variables.\"\r\n[1] \"un_factor: I will identify variable that are factor but shouldn't be.\"\r\n[1] \"un_factor: It took me 0s to un-factor 0 column(s).\"\r\n"]
[1,"[1] \"find_and_transform_dates: It took me 0.11s to identify formats\"\r\n[1] \"find_and_transform_dates: There are no dates to transform.\\n                   (If i missed something please provide the date format in inputs or\\n                   consider using set_col_as_date to transform it).\"\r\n[1] \"find_and_transform_numerics: It took me 0s to identify 0 numerics column(s), i will set them as numerics\"\r\n[1] \"find_and_transform_numerics: There are no numerics to transform.(If i missed something consider using set_col_as_numeric to transform it)\"\r\n"]
[1,"n= 28834 \r\n\r\nnode), split, n, deviance, yval\r\n      * denotes terminal node\r\n\r\n 1) root 28834 3134315.00 40.02743  \r\n   2) job=admin.,blue-collar,entrepreneur,housemaid,management,self-employed,services,student,technician,unemployed,unknown 27634 2402482.00 39.07701  \r\n     4) marital=single 8016  417461.90 33.00374  \r\n       8) job=student 547   12712.17 25.37477 *\r\n       9) job=admin.,blue-collar,entrepreneur,housemaid,management,self-employed,services,technician,unemployed,unknown 7469  370582.10 33.56246 *\r\n     5) marital=divorced,married,unknown 19618 1568543.00 41.55857  \r\n      10) education=basic.6y,basic.9y,high.school,professional.course,university.degree 16582 1230398.00 40.71958 *\r\n      11) education=basic.4y,illiterate,unknown 3036  262721.70 46.14097 *\r\n   3) job=retired 1200  132036.20 61.91417  \r\n     6) euribor3m>=2.889 571   14246.47 55.28546 *\r\n     7) euribor3m< 2.889 629   69924.06 67.93164 *\r\n"]
[1,"n= 28833 \r\n\r\nnode), split, n, loss, yval, (yprob)\r\n      * denotes terminal node\r\n\r\n1) root 28833 6021 no (0.7911767766 0.2087191759 0.0001040474) *\r\n"]
[2,"Warning: Error in data.frame: arguments imply differing number of rows: 0, 1\r\n  102: stop\r\n  101: data.frame\r\n  100: .generateVarColor\r\n   99: visTree\r\n   98: tree_visualization\r\n   97: shinyRenderWidget\r\n   96: func\r\n   83: renderFunc\r\n   82: output$tree_plot\r\n    1: runApp\r\n"]
[2,"Input to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\r\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\r\n"]
[1,"\nShiny application successfully stopped.\n\n"]
